name: ML Model Validation

on:
  push:
    branches: [ main ]
    paths:
      - 'app/ml/**'
      - 'tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/ml/**'
      - 'tests/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: docuvector-models
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  SAGEMAKER_ROLE: ${{ secrets.SAGEMAKER_ROLE }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run unit tests
      run: |
        pytest tests/unit --cov=app --cov-report=xml
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        
    - name: Run integration tests
      run: |
        pytest tests/integration --cov=app --cov-append
        
  validate-model:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow
        
    - name: Validate model performance
      run: |
        python scripts/validate_model.py
        
    - name: Check model bias
      run: |
        python scripts/check_bias.py
        
    - name: Generate validation report
      run: |
        python scripts/generate_report.py
        
  deploy-model:
    needs: validate-model
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push model to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.model .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Deploy model to SageMaker
      run: |
        python scripts/deploy_model.py
        
    - name: Update model registry
      run: |
        python scripts/update_registry.py
        
  monitor-model:
    needs: deploy-model
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up monitoring
      run: |
        python scripts/setup_monitoring.py
        
    - name: Deploy monitoring dashboard
      run: |
        python scripts/deploy_dashboard.py 